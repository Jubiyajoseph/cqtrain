
--1. What is the Name, ProductID and Weight for the item with Product Number 'RM-M823'
 
SELECT Name,ProductID,Weight FROM SalesLT.Product WHERE ProductNumber='RM-M823'

--2. List products with weight greater than 500. For those products, show the following information: Product ID, Name, ListPrice and calculated Gross Margin (difference between list price and standard cost)
 
SELECT ProductID,Name,ListPrice, (ListPrice-StandardCost) AS GrossMargin
from SalesLT.Product where weight>500

--3. How many Products are there with the standard weight between 400 and 500
select count(*) from SalesLT.Product where Weight BETWEEN 400 AND 500
 
--4. How many Yellow colored bikes are there (Bikes can be identified by the Product number starting with 'BK')
select COUNT(*) from SalesLT.Product WHERE ProductNumber LIKE 'BK%' AND Color='Yellow'
 
--5. Find average, maximum and minimum list price for each Product line (exclude products where Product line is NULL), sort descending by Average Standard Cost.

select AVG(ListPrice) AS AVERAGE, MAX(ListPrice) AS MAXIMUM, MIN(ListPrice) AS MINIMUM,
SUBSTRING(ProductNumber,1,2) AS ProductLine
from SalesLT.Product 
GROUP BY (SUBSTRING(ProductNumber,1,2)) 
ORDER BY AVG(StandardCost) DESC



--1.  Use the SubTotal value in SaleOrderHeader to list orders from the largest to the smallest. For each order show the CompanyName and the SubTotal and the total weight of the order.
SELECT C.CompanyName, SOH.SubTotal, SUM(SOD.OrderQty * P.weight) AS OrderWeight
FROM SalesLT.Product P INNER JOIN SalesLT.SalesOrderDetail SOD
ON P.ProductID = SOD.ProductID
INNER JOIN SalesLT.SalesOrderHeader SOH
ON SOD.SalesOrderID = SOH.SalesorderID
INNER JOIN SalesLT.Customer C
ON SOH.CustomerID = C.CustomerID
GROUP BY  SOH.SalesOrderID, SOH.SubTotal, C.CompanyName
ORDER BY SOH.SubTotal DESC

--SELECT SOD.SalesOrderID FROM SalesLT.SalesOrderDetail SOD
--INNER JOIN SalesLT.Product P ON P.ProductID = SOD.ProductID

--SELECT SUM(SOD.OrderQty * P.weight)  FROM SalesLT.SalesOrderDetail SOD
--INNER JOIN SalesLT.Product P ON P.ProductID = SOD.ProductID
--WHERE SOD.SalesOrderID=71938


--2. How many products in ProductCategory ‘Cranksets’ have been sold to an address in ‘London’?
SELECT  COUNT(*)
FROM SalesLT.ProductCategory PC INNER JOIN SalesLT.Product P
  ON PC.ProductCategoryID = P.ProductCategoryID
INNER JOIN SalesLT.SalesOrderDetail SOD
  ON P.ProductID = SOD.ProductID
INNER JOIN SalesLT.SalesOrderHeader SOH
  ON SOD.SalesOrderID = SOH.SalesorderID
INNER JOIN SalesLT.Address A
  ON SOH.ShipToAddressID = A.AddressID
WHERE A.City = 'London' AND PC.Name = 'Cranksets'

--SELECT * FROM SalesLT.ProductCategory PC INNER JOIN SalesLT.Product P
--ON PC.ProductCategoryID = P.ProductCategoryID WHERE PC.Name = 'Cranksets'


--3.For every customer with a ‘Main Office’ in Dallas show AddressLine1 of the ‘Main Office’ and AddressLine1 of the ‘Shipping’ address - if there is no shipping address leave it blank. Use one row per customer.

--4.For each order show the SalesOrderID and SubTotal calculated three ways: 
   --A) From the SalesOrderHeader 
   --B) Sum of OrderQtyUnitPrice 
   --C) Sum of OrderQtyListPrice

--4A
SELECT SalesOrderID,SubTotal FROM SalesLT.SalesOrderHeader 

--4B
SELECT SalesOrderID,SUM(OrderQty * UnitPrice) AS CalculatedSubTotal 
FROM SalesLT.SalesOrderDetail GROUP BY SalesOrderID

--4C
SELECT SalesOrderID, SUM(OrderQty * ListPrice) AS CalculatedSubTotal 
FROM  SalesLT.SalesOrderDetail SOD INNER JOIN
SalesLT.Product P ON SOD.ProductID=P.ProductID
GROUP BY SalesOrderID


--5.Show the best selling item by value.

--6.From which city 
    --a) most no of order
    --b) most profitable city 
    --c) which hasn't placed any orders 