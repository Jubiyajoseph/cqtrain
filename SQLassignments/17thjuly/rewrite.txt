--5. Show the CompanyName for all customers with an address in City 'Dallas'.

--UPDATED query using EXISTS clause
SELECT CompanyName FROM SalesLT.Customer C 
WHERE EXISTS(SELECT * FROM SalesLT.CustomerAddress CA INNER JOIN
SalesLT.Address A ON A.AddressID=CA.AddressID WHERE C.CustomerID=CA.CustomerID
AND A.City='Dallas')

 --6. How many items with ListPrice more than $1000 have been sold?

--UPDATED query using EXISTS clause
SELECT COUNT(*) FROM SalesLT.Product P WHERE EXISTS
(SELECT * FROM SalesLT.SalesOrderDetail SOD
INNER JOIN SalesLT.SalesOrderDetail SOH ON SOD.SalesOrderID=SOH.SalesOrderID
WHERE SOD.ProductID= P.ProductID AND P.ListPrice>1000) 

--7. Give the CompanyName of those customers with orders over $100000. Include the subtotal plus tax plus freight

--UPDATED query using GROUP BY clause
SELECT C.CompanyName, SUM(SOH.SubTotal + SOH.TaxAmt + SOH.Freight) AS Amount
FROM SalesLT.Customer C
JOIN SalesLT.SalesOrderHeader SOH ON C.CustomerID = SOH.CustomerID
GROUP BY C.CompanyName HAVING SUM(SOH.SubTotal + SOH.TaxAmt + SOH.Freight) > 100000


--8. Find the number of left racing socks ('Racing Socks, L') ordered by CompanyName 'Riding Cycles'

--USING exists clause
SELECT SUM(sod.OrderQty) FROM SalesLT.SalesOrderDetail sod 
WHERE EXISTS(SELECT 1 FROM SalesLT.Product p INNER JOIN SalesLT.SalesOrderHeader soh
ON sod.SalesOrderID = soh.SalesOrderID INNER JOIN SalesLT.Customer c 
ON soh.CustomerID = c.CustomerID WHERE p.Name = 'Racing Socks, L' AND
c.CompanyName = 'Riding Cycles' and sod.ProductID = p.ProductID)

--9. “Single Item Order” is a customer order where only one item is ordered. 
--Show the SalesOrderID and the UnitPrice for every Single Item Order.

--USING exists clause